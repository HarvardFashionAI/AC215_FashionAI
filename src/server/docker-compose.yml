services:
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    volumes:
      - ../../../secrets:/secrets
    environment:
      - GOOGLE_APPLICATION_CREDENTIALS=${GOOGLE_APPLICATION_CREDENTIALS}
      - PYTHONUNBUFFERED=${PYTHONUNBUFFERED}
      - PINECONE_SERVICE_HOST=pinecone_service
      - VECTOR_SERVICE_HOST=vector_service
      - PINECONE_SECRET_NAME=${PINECONE_SECRET_NAME}
      - PINECONE_INDEX_NAME=${PINECONE_INDEX_NAME}
    ports:
      - "${APP_PORT_BACKEND}:${APP_PORT_BACKEND}"
    networks:
      - app-network
    depends_on:
      pinecone_service:
        condition: service_healthy
      vector_service:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "sh", "-c", "curl --silent --show-error http://localhost:${APP_PORT_BACKEND}/health || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 3

  vector_service:
    build:
      context: ./vector_service
      dockerfile: Dockerfile
    volumes:
      - ../../../secrets:/secrets
    environment:
      - GOOGLE_APPLICATION_CREDENTIALS=${GOOGLE_APPLICATION_CREDENTIALS}
      - PYTHONUNBUFFERED=${PYTHONUNBUFFERED}
    ports:
      - "${APP_PORT_VECTOR}:${APP_PORT_VECTOR}"
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "sh", "-c", "curl --silent --show-error http://localhost:${APP_PORT_VECTOR}/health || exit 1"]
      interval: 20s
      timeout: 5s
      retries: 3

  pinecone_service:
    build:
      context: ./pinecone_service
      dockerfile: Dockerfile
    volumes:
      - ../../../secrets:/secrets
    environment:
      - GOOGLE_APPLICATION_CREDENTIALS=${GOOGLE_APPLICATION_CREDENTIALS}
      - PYTHONUNBUFFERED=${PYTHONUNBUFFERED}
    ports:
      - "${APP_PORT_PINECONE}:${APP_PORT_PINECONE}"
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "sh", "-c", "curl --silent --show-error http://localhost:${APP_PORT_PINECONE}/health || exit 1"]
      interval: 15s
      timeout: 10s
      retries: 5

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "${APP_PORT_FRONTEND}:${APP_PORT_FRONTEND}"
    environment:
      NODE_ENV: production
    stdin_open: true
    tty: true
    networks:
      - app-network
    depends_on:
      backend:
        condition: service_healthy


networks:
  app-network:
    driver: bridge
